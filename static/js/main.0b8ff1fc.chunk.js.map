{"version":3,"sources":["components/quizData.js","components/MainQuiz.js","index.js"],"names":["quizData","id","question","options","answer","MainQuiz","state","currentQuestion","userAnswer","numberOfAnswers","score","disabled","isEnd","ans","finishHandler","setState","firstHandler","value","secondHandler","e","JSON","stringify","includes","thirdHandler","slice","console","log","fourthHandler","btnStyle","backgroundColor","color","margin","marginBottom","this","className","length","TextField","style","label","inputRef","c","onChange","ToggleButtonGroup","exclusive","map","option","ToggleButton","key","variant","onClick","bind","FormControl","width","InputLabel","Select","padding","MenuItem","FormGroup","display","justifyContent","FormControlLabel","control","Checkbox","name","Typography","gutterBottom","Grid","container","spacing","paddingLeft","paddingRight","item","xs","Slider","defaultValue","aria-labelledby","step","valueLabelDisplay","min","max","Button","React","Component","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.0b8ff1fc.chunk.js","sourcesContent":["export const quizData = [\r\n    {\r\n        id: 0,\r\n        question: `What is Lord Voldemort's real name?`,\r\n        options: ['Type your answer...'],\r\n        answer: 'Tom Marvolo Riddle'\r\n    },\r\n    {\r\n        id: 1,\r\n        question: `What's the LAST line of the book, \"Harry Potter and the Sorcerer's Stone\"?`,\r\n        options: [`\"Goodbye, for now, Hogwarts.\"`, `\"Harry, Ron, and Hermione looked at each other sheepishly and smiled.\"`, \r\n                    `\"I'm going to have a lot of fun with Dudley this summer...\"`, `\"'Until the fall', said Dumbledore with a nod.\"`],\r\n        answer: `\"I'm going to have a lot of fun with Dudley this summer...\"`\r\n    },\r\n    {\r\n        id: 2,\r\n        question: `According to the Dursleys, did Harry’s parents die in a car crash?`,\r\n        options: ['True', 'False'],\r\n        answer: 'True'\r\n    },\r\n    {\r\n        id: 3,\r\n        question: `What are the houses in Hogwarts?`,\r\n        options: ['Gryffindor', 'Whitehouse', 'Ravenclaw', 'Hufflepuff', 'Greenhouse', 'Slytherin'],\r\n        answer: ['Gryffindor', 'Ravenclaw', 'Hufflepuff', 'Slytherin']\r\n    },\r\n    {\r\n        id: 4,\r\n        question: `How old is Harry Potter in book 1 “Harry Potter and the Sorcerer's Stone”?`,\r\n        options: ['11', 'A2', 'A4', 'A5'],\r\n        answer: '11'\r\n    },\r\n]","import React from \"react\";\r\nimport { quizData } from \"./quizData\";\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nclass MainQuiz extends React.Component {\r\n  state = {\r\n    currentQuestion: 0,\r\n    userAnswer: \"\",\r\n    numberOfAnswers: 0,\r\n    score: 0,\r\n    disabled: true,\r\n    isEnd: false,\r\n    ans: \"\"\r\n  };\r\n\r\n  finishHandler = () => {\r\n      this.setState({\r\n        isEnd: true,\r\n      });\r\n  };\r\n\r\n  firstHandler = () => {\r\n    if(this.state.userAnswer.value === quizData[0].answer) {\r\n      this.state.score += 1;\r\n    this.state.userAnswer = \"\";\r\n    }\r\n  }\r\n  secondHandler = (e) => {\r\n    if(JSON.stringify(e).includes(JSON.stringify(quizData[1].answer))) {\r\n      this.state.score += 1;\r\n    }\r\n  }\r\n  thirdHandler = (e) => {\r\n    this.state.userAnswer = JSON.stringify(e).slice(11,-2);\r\n    console.log(quizData[2].answer);\r\n    if(this.state.userAnswer === quizData[2].answer) {\r\n      this.state.score += 1;\r\n    this.state.userAnswer = \"\";\r\n    }\r\n  }\r\n  fourthHandler = (e) => {\r\n    this.state.ans = e;\r\n    console.log(this.state.ans);\r\n  }\r\n\r\n  render() {\r\n// styling\r\n    const checkboxStyle = {\r\n        display: 'grid',\r\n        justifyContent: 'center',\r\n        marginBottom: '90px'\r\n    };\r\n    const btnStyle = {\r\n        backgroundColor: '#73C2FB',\r\n        color: '#ffffff',\r\n        margin: '10px',\r\n        marginBottom: '90px'\r\n    };\r\n    const menuStyle = {\r\n        width: '25%',\r\n        backgroundColor: '#ffffff',\r\n        marginBottom: '90px'\r\n    };\r\n    const selectStyle = {\r\n        padding: '10px',\r\n    };\r\n    const sliderStyle = {\r\n        paddingLeft: '15%',\r\n        paddingRight: '15%',\r\n        marginBottom: '90px'\r\n    };\r\n    const textfieldStyle = {\r\n        marginBottom: '90px'\r\n    }\r\n\r\n    const { isEnd } = this.state;\r\n\r\n    if (isEnd) {\r\n      return (\r\n        <div className=\"result\">\r\n          <h3>You have answered {this.state.score} out of {quizData.length} correctly! </h3>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n            <p>Q{quizData[0].id + 1}</p>\r\n            <h1>{quizData[0].question}</h1>\r\n            <TextField \r\n              style={textfieldStyle}\r\n              label={quizData[0].options}\r\n              inputRef={(c) => {this.state.userAnswer = c}}\r\n              onChange={this.firstHandler}\r\n               />\r\n\r\n\r\n            <p>Q{quizData[1].id + 1}</p>\r\n            <h1>{quizData[1].question}</h1>\r\n            <ToggleButtonGroup\r\n              exclusive>\r\n              {quizData[1].options.map(option => (\r\n                <ToggleButton key={option} value={option} style={btnStyle} variant=\"contained\"\r\n                  onClick={this.secondHandler.bind(this, {option})}>\r\n                  {option}\r\n                </ToggleButton>\r\n              ))}\r\n            </ToggleButtonGroup>\r\n\r\n\r\n            <p>Q{quizData[2].id + 1}</p>\r\n            <h1>{quizData[2].question}</h1>\r\n            <FormControl style={menuStyle}>\r\n                <InputLabel>Choose an answer</InputLabel>\r\n                    <Select style={selectStyle}>\r\n                        {quizData[2].options.map(option => (\r\n                            <MenuItem key={option} value={option} onClick={this.thirdHandler.bind(this, {option})}>{option}</MenuItem>\r\n                        ))}\r\n                    </Select>\r\n            </FormControl>\r\n\r\n\r\n            <p>Q{quizData[3].id + 1}</p>\r\n            <h1>{quizData[3].question}</h1>\r\n            <FormGroup style={checkboxStyle}>\r\n                {quizData[3].options.map(option => (\r\n                    <FormControlLabel\r\n                        key={option}\r\n                        control={<Checkbox name={option} />}\r\n                        label={option} \r\n                        onClick={this.fourthHandler.bind(this, {option})}\r\n                        />\r\n                ))}\r\n            </FormGroup>\r\n\r\n\r\n            <p>Q{quizData[4].id + 1}</p>\r\n            <h1>{quizData[4].question}</h1>\r\n            <Typography id=\"discrete-slider-custom\" gutterBottom>\r\n                     Choose an age:\r\n            </Typography>\r\n            <Grid container spacing={2} style={sliderStyle}>\r\n                <Grid item>\r\n                    0\r\n                </Grid>\r\n                <Grid item xs>\r\n                    <Slider\r\n                        defaultValue={0}\r\n                        aria-labelledby=\"discrete-slider-custom\"\r\n                        step={1}\r\n                        valueLabelDisplay=\"auto\"\r\n                        min={0}\r\n                        max={20}\r\n                    />\r\n                </Grid>\r\n                <Grid item>\r\n                20\r\n                </Grid>\r\n            </Grid>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={this.finishHandler}>\r\n                    Submit\r\n            </Button>\r\n        </div>\r\n        );\r\n    }\r\n  }\r\n}\r\n\r\nexport default MainQuiz;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport MainQuiz from \"./components/MainQuiz\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainQuiz/>\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}